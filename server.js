// Generated by CoffeeScript 1.9.3
(function() {
  var Schema, Station, StationSchema, app, base_uri, bodyParser, db, express, getRequest, index, io, mongodb_uri, mongoose, morgan, port_number, postRequest, postRequest1, request, server;

  express = require('express');

  app = express();

  server = require('http').Server(app);

  io = require('socket.io')(server);

  request = require('request');

  morgan = require('morgan');

  mongoose = require('mongoose');

  bodyParser = require('body-parser');

  app.use(bodyParser.json());

  app.use(bodyParser.urlencoded({
    extended: true
  }));

  port_number = process.argv[2] || 3000;

  server.listen(port_number);

  console.log("listening on: " + port_number);

  base_uri = 'http://localhost:3000';

  mongodb_uri = 'http://localhost:28017/serverStatus';

  index = '/';

  app.use("/prod/css", express["static"](__dirname + '/prod/css'));

  app.use("/prod/js", express["static"](__dirname + '/prod/js'));

  app.use(morgan('combined'));

  mongoose.connect('mongodb://localhost:27017/graph');

  db = mongoose.connection;

  db.on('error', console.error.bind(console, 'connection error:'));

  db.once('open', function(callback) {
    return console.log("mongo connection");
  });

  Schema = mongoose.Schema;

  StationSchema = new Schema({
    count: Number
  });

  module.exports = mongoose.model('Station', StationSchema);

  Station = mongoose.model('Station', StationSchema);

  io.on('connection', function(socket) {
    return socket.emit('startup', {
      server: 'ping'
    });
  });

  app.get(index, function(req, res) {
    io.sockets.emit('getRequest', {});
    return res.sendFile(__dirname + '/prod/index.html');
  });

  app.post('/api/station', function(req, res) {
    var count, station, station_id;
    Station = mongoose.model('Station', '/models/station.js');
    station = new Station;
    station_id = req.body.id;
    count = req.body.count;
    station.count = req.body.count;
    return station.save(function(err) {
      if (err) {
        res.send(err);
      }
      io.sockets.emit('postRequest', {
        _id: station_id,
        _count: count
      });
      res.json({
        _id: station_id,
        _message: "created station " + station_id
      });
      return station.find({}, function(err, stations) {
        return console.log(stations);
      });
    });
  });

  postRequest = function() {
    return request.post(base_uri + '/api/station').form({
      id: '5',
      count: Math.floor(Math.random() * 600) + 1
    });
  };

  postRequest1 = function() {
    return request.post(base_uri + '/api/station').form({
      id: '2',
      count: Math.floor(Math.random() * 600) + 1
    });
  };

  getRequest = function() {
    return request.get(base_uri + index);
  };

  request(mongodb_uri, function(error, response, body) {
    var data;
    if (!error && response.statusCode === 200) {
      data = JSON.parse(body);
      console.log(data.host);
      console.log(data.version);
      return console.log(data.uptime);
    }
  });

}).call(this);
